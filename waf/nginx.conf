# encoding: utf-8
#
# Copyright 2016, Patrick Muench
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

user www-data www-data;
worker_processes 2;
worker_rlimit_core 500M;
working_directory /tmp/;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
      worker_connections 1024;

      # optmized to serve many clients with each thread, essential for linux
      use epoll;

      # accept as many connections as possible, may flood worker connections if set too low
      #multi_accept on;
}

http {
      ##
      # Basic Settings
      ##

      sendfile on;

      tcp_nopush on;
      tcp_nodelay on;

      types_hash_max_size 2048;
      server_tokens off;

      more_clear_headers 'Server';
      more_clear_headers 'X-Powered-By';

      client_body_buffer_size 1k;
      client_header_buffer_size 1k;
      client_max_body_size 3G;
      large_client_header_buffers 2 1k;

      client_body_timeout 10;
      client_header_timeout 10;
      keepalive_timeout 5 5;
      send_timeout 10;

      limit_conn_zone $binary_remote_addr zone=default:10m;
      limit_conn default 16;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # Logging Settings
      ##

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log;

      ##
      # Gzip Settings
      ##

      # Disable gzip to avoid the removal of the ETag header
      gzip off;

      ##
      # include Naxsi Core Rules
      ##

      ### Load default rules
      include /etc/nginx/naxsi_main.rules;

      server {
          listen 443 ssl;
          server_name owncloud-ssl;
          #return 444;  # not tested yet

          # Add headers to serve security related headers
          add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
          add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-src *; img-src * data: blob:; font-src 'self' data:; media-src *; connect-src *";
          add_header X-Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-src *; img-src * data: blob:; font-src 'self' data:; media-src *; connect-src *";
          add_header X-Permitted-Cross-Domain-Policies "master-only";
          add_header X-Content-Type-Options nosniff;
          add_header X-Frame-Options "SAMEORIGIN";
          add_header X-XSS-Protection "1; mode=block";
          add_header X-Robots-Tag none;

          ssl_session_cache shared:SSL:50m;
          ssl_session_timeout 5m;
          ssl_dhparam /etc/ssl/nginx/dhparam.pem;
          ssl_certificate /etc/ssl/nginx/ssl.crt;
          ssl_certificate_key /etc/ssl/nginx/ssl.key;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          ssl_prefer_server_ciphers on;
          ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

          access_log /var/log/nginx/ssl_offload_access.log;
          error_log /var/log/nginx/ssl_offload_error.log debug;

          # Disable gzip to avoid the removal of the ETag header
          gzip off;

          location / {
            proxy_pass http://127.0.0.1:8080;
          }

          # Adding the cache control header for js and css files
          # Make sure it is BELOW the location ~ \.php(?:$|/) { block
          location ~* \.(?:css|js)$ {
            add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-src *; img-src * data: blob:; font-src 'self' data:; media-src *; connect-src *";
            add_header X-Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-src *; img-src * data: blob:; font-src 'self' data:; media-src *; connect-src *";
            add_header X-Permitted-Cross-Domain-Policies "master-only";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Robots-Tag none;
            # Optional: Don't log access to assets
            #access_log off;
            proxy_pass http://127.0.0.1:8080;
          }
      }

      server {
          listen 8080;
          server_name owncloud_naxsi

          set $naxsi_extensive_log 1;
          access_log /var/log/nginx/naxsi_access.log;
          error_log /var/log/nginx/naxsi_error.log debug;

          location / {
              LibInjectionXss; #enable libinjection for XSS
              LibInjectionSql; #enable libinjection for SQLi
              include /etc/nginx/naxsi.rules;
              include /etc/nginx/naxsi_whitelist.rules;
              proxy_pass http://proxy_redirect_ip;
          }

          location /RequestDenied {
              return 418;
          }
      }
}
